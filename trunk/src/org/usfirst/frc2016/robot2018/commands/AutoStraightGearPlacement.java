// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2016.robot2018.commands;

//import java.awt.Robot;
import edu.wpi.first.wpilibj.command.CommandGroup;

import org.usfirst.frc2016.robot2018.Robot;
import org.usfirst.frc2016.robot2018.RobotPrefs;
import org.usfirst.frc2016.robot2018.subsystems.*;
/**
 *
 */
public class AutoStraightGearPlacement extends CommandGroup {
	private double speed, distance;
	private double startingAngle;
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
    public AutoStraightGearPlacement() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
    	distance = Robot.robotPrefs.straightGearDistance;
    	speed = Robot.robotPrefs.straightGearSpeed;
    	// Add Commands here:
        // e.g. addSequential(new Command1());
        //      addSequential(new Command2());
        // these will run in order.

        // To run multiple commands at the same time,
        // use addParallel()
        // e.g. addParallel(new Command1());
        //      addSequential(new Command2());
        // Command1 and Command2 will run in parallel.

        // A command group will require all of the subsystems that each member
        // would require.
        // e.g. if Command1 requires chassis, and Command2 requires arm,
        // a CommandGroup containing them would require both the chassis and the
        // arm.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS
    	//startingAngle = Robot.gyro.getAngle();
    	addSequential(new ResetGyro());
    	addSequential(new IsElevatorCalibrated());
        addSequential(new ShiftLow());
        
        addSequential(new ElevatorPrePickup());
      //  addSequential(new CompGrab());
      //  addSequential(new ArcadeDrive(speed, 0, 20));
       // addSequential(new CompGrab());
      //  addSequential(new ArcadeDrive(speed, 0 , distance));
      //  addSequential(new DelaySeconds(2));
        //addSequential(new ArcadeDrive(-0.6, 0, 40));
        addSequential(new CameraDriveGyro());
        addSequential(new ElevatorHigh());
        addSequential(new DriveStraightForDistance(-.5, 28));
        addSequential(new GearRelease());
        addSequential(new DelaySeconds(.5));
        //addSequential(new ArcadeDrive(0.6, 0, 24));
        addSequential(new ArcadeDrive(0.7, 0, 15));

    } 
}
